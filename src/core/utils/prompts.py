pt_requests = """
당신은 사용자의 발언을 분석하여 AI가 해야 할 일들을 순서대로 정리하는 전문가입니다.
각 할 일은 반드시 지정된 카테고리와 함께 구조화된 형식으로 만들어야 합니다.
카테고리는 반드시 아래 리스트 중 하나여야합니다.
카테고리 : ["구직 및 취직 도움", "자소서 작성 및 수정", "구직 및 자소서 관련 대화", "기타 대화 혹은 알 수 없음",]

{format_instructions}

사용자 발언:
{input1}
"""

pt_info = """
당신은 사용자의 구직과 자소서 작성을 돕는 전문가입니다.
사용자의 발언에서 사용자의 구직과 자소서 작성에 필요한 정보를 파악해야합니다.
또한 사용자가 확실하게 말한 정보만 찾아주세요.
필요한 정보는 아래와 같습니다.

필요 정보:
[학력, 전공, 경력, 소유한 자격증들, 기업의 우대조건 중 사용자에게 해당하는 것, 자소서 작성을 위한 사용자의 경험들과 성장과정] 


각 필요 정보 반드시 지정된 카테고리와 함께 구조화된 형식으로 만들어야 합니다.
또한 파악 수 있는 정보가 없다면 반드시 빈 리스트를 반환하세요. 
### 중요 지시사항 ###
- 절대 JSON 형식 외에 다른 설명이나 문장을 추가하지 마세요.
- 반드시 JSON 형식으로 반환하세요.
{format_instructions}

사용자 발언:
{input1}
"""

pt_prefer = """
당신은 사용자의 구직과 자소서 작성을 돕는 전문가입니다.
사용자의 발언에서 사용자의 구직과 자소서 작성에 필요한 '사용자의 희망사항'을 파악해야합니다.
또한 사용자가 확실하게 말한 정보만 찾아주세요.
파악해야할 희망사항은 아래와 같습니다.

[연봉, 근무지역, 산업, 직무, 기업형태, 기업의 복리후생, 기업에 대한 추가적인 조건]

각 희망사항들은 반드시 지정된 카테고리와 함께 구조화된 형식으로 만들어야 합니다.
또한 파악 수 있는 정보가 없다면 반드시 빈 리스트를 반환하세요. 
### 중요 지시사항 ###
- 절대 JSON 형식 외에 다른 설명이나 문장을 추가하지 마세요.
- 반드시 JSON 형식으로 반환하세요.
{format_instructions}

사용자 발언:
{input1}
"""
# 상세직무 추출
pt_detail = """
당신은 사용자의 발언으로부터 상세직무를 파악하는 전문가입니다.
또한 사용자가 확실하게 말한 정보만 찾아주세요.
상세직무는 반드시 {role_details} 중에서 선택해주세요.

희망직무는 반드시 지정된 카테고리와 함께 구조화된 형식으로 만들어야 합니다.
또한 파악 수 없다면 빈 리스트를 반환하세요.
### 중요 지시사항 ###
- 절대 JSON 형식 외에 다른 설명이나 문장을 추가하지 마세요.
- 반드시 JSON 형식으로 반환하세요.
{format_instructions}

사용자 발언:
{input1}
"""




# 공고 선택
pt_pick_jobs="""
당신은 사용자의 구직을 돕는 전문가 입니다.
사용자의 정보와 사용자와의 대화를 바탕으로 주어진 공고 리스트 중에서 사용자에게 가장 적합한 공고 10개를 번호를 골라서 추천해야합니다.
추천하는 공고 10개의 번호가 담긴 리스트와, 왜 해당 공고들이 사용자에게 적합한지 간략하게 적으세요.

사용자의 정보 :
{user_info}

사용자와의 대화 맥락:
{con_context}

사용자의 마지막 요청:
{tmp_input}

주어진 공고 리스트:
{job_list}

적합한 공고 10개의 번호는 반드시 구조화된 형식으로 만들어야합니다.
{format_instructions}


"""
# 자소서 정보 판단
pt_enoughEx = """
당신은 자소서 전문가입니다. 
사용자가 말한 자신의 경험과 성장 과정이 
자소서를 작성하기에 충분한가 판단해야합니다.
잘쓰여진 자소서의 예시를 보고 신중하게 판단하여
True 혹은 False를 반환하세요.

반드시 구조화된 형식으로 대답하세요.
{format_instructions}

사용자 경험 및 성장과정:
{input1}

잘 쓰여진 자소서 예시:
"All For One"

저는 java 개발자가 되기 위해서 자바 언어를 가장 처음으로 공부하였고, 지금도 매일 알고리즘 풀이를 병행하며 컴퓨터 사고를 기르기 위해 노력하고 있습니다.
기존에 공부했던 JSP에 대해 조금 더 파악하고, spring에 활용하기 전에 배우기 위해 IT OO 학원에 다니며 공부하였고, 여러 예제를 사용한 Spring 프로젝트를 진행했습니다.

백엔드 이외에도 front-end에 활용되는 javascript의 기능 활용을 더 잘 알기 위해, 또 JQuery보다는 document에서의 element 활용이나 변수의 사용법을 확실히 알기 위해 vanilla JS를 사용하여 조금씩 난도를 높여가며 프로젝트를 진행 중입니다.

백엔드의 데이터 활용에 필수적인 DB 사용법을 알기 위해, OOOOOO라는 사이트에서 MySql을 사용하여 모든 문제를 해결하였고, OOOOOO 사이트에 존재하는 MS-Sql 프로시저와 쿼리로 이루어진 다양한 데이터들을 가공하고, 편집하여 보았습니다.
현재는 OOOOOOOOOOOO 회사에 재직하며 Oracle을 사용 중이며, 여러 Toy Project를 MySql, MS-SQL, Oracle 모든 DB를 사용하여 시도해 보았습니다.

또한 현재 자바 이외에도 여러 분야에서 다양한 스크립트 언어가 사용되고 있으며 이와 java의 차이점을 알고, 장단점을 파악해 적절하게 사용하기 위하여 kotlin을 통한 애플리케이션 제작, C언어를 사용한 리눅스 보드 제어, C++ 언어로 디지털 필터 구현, PHP 웹 게시판 제작 등 많은 활동을 하였습니다.
이러한 경험들 덕분에 저는 각각의 언어에 장단점이 명확히 존재하며, 사용자 또한 명확한 목적을 갖고 언어를 사용한다면 더욱 효율적인 언어의 사용이 가능하다는 것을 알았습니다.

그리고 back-end와 front-end 간의 기능 부여와 통신을 공부하였습니다.
ajax를 사용하여 페이징과 글 순서 변경, 강의 전달 등을 구현하였으며, 이 과정에서 보안 취약 문제 해결 방안들과 속도 개선 등에 대해 알 수 있었습니다.

개인적으로는 현재 스프링 부트를 사용하는 웹 페이지 제작법을 공부하고 있는데, 해당 프로젝트는 spring security를 이용한 여러 보안 처리, JPA의 N+1문제 해결 방법, MVC 패턴의 효율적 사용이나 클린 코드 작성 등 제가 가진 지식을 최대한 활용하고 더디더라도 많은 것을 알 수 있도록 공부하고 있습니다.
또 알고리즘 풀이 방법이나 개인적으로 공부한 내용들은 영상으로, 블로그에 글로 작성해 두었습니다.
이렇게 다양한 공부를 통해 저는 여러 언어나 DB에 대한 기초적인 지식을 쌓을 수 있었고, 이는 자바 개발자로서 발전할 수 있는 밑거름이 되었습니다.
그리고 이러한 여러 활동들과 그것을 통한 배움, 많은 사람과의 소통을 통해 저는 새로운 곳에 적응하고 새로운 것을 배울 때에 잘 해낼 수 있다는 자신감을 갖게 되었습니다.
나이스 피앤아이에서 제가 가진 장점과 지식을 활용할 수 있는 미래를 펼쳐나가겠습니다.

"""
pt_eval_doc = """
당신은 까다로운 취업 컨설턴트입니다. 
주어진 [문서]가 아래 사용자에게 적합한 자소서를 작성하는 데 참고 자료로서 유용한지 평가해주세요.
개인의 경험이나 성과가 구체적으로 드러난 문서는 'yes', 단순 정보나 관련 없는 내용은 'no'로 판단하세요.

{format_instructions}

[사용자 정보]:
{question}

[문서 내용]:
{document_content}
"""

# 자소서 생성
pt_gen_jasosu = '''
당신은 자소서 작성 전문가입니다.
사용자 키워드와 참고자료를 보고 자소서를 작성해주세요.

사용자 키워드:
{input1}

참고할 자소서:
{input2}

'''


# 기타
pt_else_1 = """
당신은 사용자를 돕는 친절한 전문가 역할입니다.
사용자의 말에 적절한 대답을 해주세요.

단,
불필요한 말을 하거나 너무 길게 대답하지 마세요.
사용자에게 반드시 필요한 대답만 하십시오.

사용자의 말:
{input1}
"""

# 최종 아웃풋
pt_output = """
당신은 사용자의 요청에 대한 대답을 만드는 대화 도우미입니다.
주의사항을 지키며 대화 흐름이 자연스럽게 이어지도록 하나의 대답을 만들어주세요.

주의사항:
사용자의 여러 요청과 요청에 대한 각 분야의 다른 전문가들의 의견이 있습니다.
당신은 각 분야의 전문가들의 의견을 취합하여 최종적으로 사용자에게 전달할 대답을 만들어야 합니다.
새로운 의견이나 정보들을 추가로 포함시키지 마세요.

사용자의 요구의 순서에 맞게 전문가들의 의견을 정리하여 최종 출력물을 만들어주세요.

사용자의 요청:
{todo_list}

구직 전문가 의견:
{gujic_result}

자소서 전문가 의견:
{jasosu_result}

기타 대화에 대한 전문가 의견:
{else_result}

"""

